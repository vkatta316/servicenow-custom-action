# This workflow uses ServiceNow custom actions that are certified by ServiceNow vk.

name: CI GitHub workflow

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
    types: [opened, synchronize, reopened]

jobs:
  build:
    name: 'Build'
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn clean compile

  # test:
  #   name: 'Test'
  #   needs: build
  #   runs-on: ubuntu-latest
  #   steps:
  #   - name: Checkout
  #     uses: actions/checkout@v4.0.0

  # test:
  #   name: 'Test'
  #   needs: build
  #   runs-on: ubuntu-latest
  #   steps:
  #   - name: Checkout
  #     uses: actions/checkout@v3.1.0
        
  #   - name: Run Tests with Maven
  #     run: mvn -B test --file pom.xml
  #   - name: ServiceNow DevOps Unit Test Results            
  #     uses: ServiceNow/servicenow-devops-test-report@v4.1.0
  #     with:
  #         # Devops Integration Token
  #         # devops-integration-token: ${{ secrets.SN_DEVOPS_TOKEN }}
  #         devops-integration-user-name: '${{ secrets.SN_DEVOPS_USER }}'
  #         devops-integration-user-password: '${{ secrets.SN_DEVOPS_PASSWORD }}'
  #         # ServiceNow Instance Name
  #         instance-url: ${{ secrets.SN_INSTANCE_URL }}
  #         # Orchestration Tool Id
  #         tool-id: ${{ secrets.SN_ORCHESTRATION_TOOL_ID }}
  #         # Job Name
  #         job-name: 'Test' # Should be same name as declared in 'name' clause of the current Stage
  #         # Github Context
  #         context-github: ${{ toJSON(github) }}
  #         # JUnit xml report file name with path
  #         xml-report-filename: testng.xml #if only JUnit tests, use target/surefire-reports/testng-results.xml
  #         # if both JUnit & TestNG tests, use target/surefire-reports/testng-junit-results/testng-results.xml
        
  #   - name: Run Tests with Maven
  #     run: mvn -B test --file pom.xml

  #   - name: ServiceNow DevOps Unit Test Results
  #   # You may pin to the exact commit or the version.
  #     uses: ServiceNow/servicenow-devops-test-report@v3.1.0
  #     with:
  #         # Devops Integration Token
  #         devops-integration-token: ${{ secrets.SN_DEVOPS_TOKEN }}
  #         # ServiceNow Instance Name
  #         instance-url: ${{ secrets.SN_INSTANCE_URL }}
  #         # Orchestration Tool Id
  #         tool-id: ${{ secrets.SN_ORCHESTRATION_TOOL_ID }}
  #         # Job Name
  #         job-name: 'Test' # Should be same name as declared in 'name' clause of the current Stage
  #         # Github Context
  #         context-github: ${{ toJSON(github) }}
  #         # JUnit xml report file name with path
  #         xml-report-filename: target/surefire-reports/testng-results.xml # if only JUnit tests, use target/surefire-reports/testng-results.xml
                                                                          # if both JUnit & TestNG tests, use target/surefire-reports/testng-junit-results/testng-results.xml

  # registerArtifact:
  #   name: 'Register Artifact'
  #   needs: test
  #   runs-on: ubuntu-latest
  #   steps:
  #   - name: ServiceNow DevOps Register Artifact
  #   # You may pin to the exact commit or the version.          
  #     uses: ServiceNow/servicenow-devops-register-artifact@v3.1.0
  #     with:
  #         # Devops Integration Token
  #         devops-integration-token: ${{ secrets.SN_DEVOPS_TOKEN }}
  #         # ServiceNow Instance URL
  #         instance-url: ${{ secrets.SN_INSTANCE_URL }}
  #         # Orchestration Tool Id
  #         tool-id: ${{ secrets.SN_ORCHESTRATION_TOOL_ID }}
  #         # Display Name of the Job
  #         job-name: 'Register Artifact'
  #         # Github Context
  #         context-github: ${{ toJSON(github) }}
  #         # List of Artifacts to be registered on
  #         artifacts: '[
  #             {
  #                 "name": "app-devops-ci.jar",
  #                 "version": "1.${{ github.run_number }}",
  #                 "semanticVersion": "1.${{ github.run_number }}.0",
  #                 "repositoryName": "${{ github.repository }}"
          #     }
          # ]'

  # sonarScan:
  #   name: 'Sonar Scan'
  #   needs: build
  #   runs-on: ubuntu-latest
  #   steps:
  #   - name: Checkout
  #     uses: actions/checkout@v4.0.0
    
  #   - name: ServiceNow DevOps Sonar Scan Results
  #   # You may pin to the exact commit or the version.     
  #     uses: ServiceNow/servicenow-devops-sonar@v3.1.0
  #     with:
  #         # ServiceNow Instance URL
  #         instance-url: ${{ secrets.SN_INSTANCE_URL }}
  #         # Devops Integration Token
  #         devops-integration-token: ${{ secrets.SN_DEVOPS_TOKEN }}
  #         # Orchestration Tool Id
  #         tool-id: ${{ secrets.SN_ORCHESTRATION_TOOL_ID }}
  #         # Github Context
  #         context-github: ${{ toJSON(github) }}
  #         # Display Name of the Job
  #         job-name: 'Sonar Scan'
  #         # Sonar Host URL
  #         sonar-host-url: ${{ secrets.SONAR_URL }}
  #         # Sonar Project Key
  #         sonar-project-key: ${{ secrets.SONAR_PROJECT_KEY }}

  # securityScan:
  #   name: 'Security Scan'
  #   needs: sonarScan
  #   runs-on: ubuntu-latest
  #   steps:
  #   - name: Checkout
  #     uses: actions/checkout@v3.1.0

  #   - name: ServiceNow DevOps Security Results
  #     uses: ServiceNow/servicenow-devops-security-result@v3.1.0
  #     with:
  #         # Devops Integration Token
  #         devops-integration-token: ${{ secrets.SN_DEVOPS_TOKEN }}
  #         instance-url: ${{ secrets.SN_INSTANCE_URL }}
  #         tool-id: ${{ secrets.SN_ORCHESTRATION_TOOL_ID }}
  #         context-github: ${{ toJSON(github) }}
  #         job-name: 'Security Scan'
  #         security-result-attributes: '{"scanner": "Veracode", "applicationName": "10kflaws-72"}'


  change:
    # jobs that must complete successfully before this job will run
    needs: build
    # type of machine to run the job on
    runs-on: ubuntu-latest
    name: 'ServiceNow DevOps Change'
    steps:
      - name: Sleep for 30 seconds
        run: sleep 10s
        shell: bash
      - name: ServiceNow Change
        uses: ServiceNow/servicenow-devops-change@dev
        with:
          # Devops Integration Token
          devops-integration-token: ${{ secrets.SN_DEVOPS_TOKEN }}
          # ServiceNow Instance URL
          instance-url: ${{ secrets.SN_INSTANCE_URL }}
          # Orchestration Tool Id
          tool-id: ${{ secrets.SN_ORCHESTRATION_TOOL_ID }}
          # GitHub Context
          context-github: ${{ toJSON(github) }}
          # Display Name of the Job
          job-name: 'ServiceNow DevOps Change'
          change-request: '{"attributes":{"requested_by":{"name": "DevOps System"},"assignment_group":{"name": "Change management"},"priority": "2","chg_model":"007c4001c343101035ae3f52c1d3aeb2","comments": "This is a sample pipeline script to be added in your change step","work_notes": "Update this to work_notes","start_date": "","end_date": ""}}'        
